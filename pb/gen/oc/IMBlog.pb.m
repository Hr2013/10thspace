// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "IMBlog.pb.h"
// @@protoc_insertion_point(imports)

@implementation ImblogRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ImblogRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ImbaseDefineRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface IMBlogSend ()
@property UInt32 userId;
@property (strong) NSData* blogData;
@property (strong) NSData* attachData;
@end

@implementation IMBlogSend

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasBlogData {
  return !!hasBlogData_;
}
- (void) setHasBlogData:(BOOL) _value_ {
  hasBlogData_ = !!_value_;
}
@synthesize blogData;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) _value_ {
  hasAttachData_ = !!_value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.blogData = [NSData data];
    self.attachData = [NSData data];
  }
  return self;
}
static IMBlogSend* defaultIMBlogSendInstance = nil;
+ (void) initialize {
  if (self == [IMBlogSend class]) {
    defaultIMBlogSendInstance = [[IMBlogSend alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMBlogSendInstance;
}
- (instancetype) defaultInstance {
  return defaultIMBlogSendInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasBlogData) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasBlogData) {
    [output writeData:2 value:self.blogData];
  }
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasBlogData) {
    size_ += computeDataSize(2, self.blogData);
  }
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMBlogSend*) parseFromData:(NSData*) data {
  return (IMBlogSend*)[[[IMBlogSend builder] mergeFromData:data] build];
}
+ (IMBlogSend*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogSend*)[[[IMBlogSend builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMBlogSend*) parseFromInputStream:(NSInputStream*) input {
  return (IMBlogSend*)[[[IMBlogSend builder] mergeFromInputStream:input] build];
}
+ (IMBlogSend*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogSend*)[[[IMBlogSend builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogSend*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMBlogSend*)[[[IMBlogSend builder] mergeFromCodedInputStream:input] build];
}
+ (IMBlogSend*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogSend*)[[[IMBlogSend builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogSendBuilder*) builder {
  return [[IMBlogSendBuilder alloc] init];
}
+ (IMBlogSendBuilder*) builderWithPrototype:(IMBlogSend*) prototype {
  return [[IMBlogSend builder] mergeFrom:prototype];
}
- (IMBlogSendBuilder*) builder {
  return [IMBlogSend builder];
}
- (IMBlogSendBuilder*) toBuilder {
  return [IMBlogSend builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasBlogData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blogData", self.blogData];
  }
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userId] forKey: @"userId"];
  }
  if (self.hasBlogData) {
    [dictionary setObject: self.blogData forKey: @"blogData"];
  }
  if (self.hasAttachData) {
    [dictionary setObject: self.attachData forKey: @"attachData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMBlogSend class]]) {
    return NO;
  }
  IMBlogSend *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasBlogData == otherMessage.hasBlogData &&
      (!self.hasBlogData || [self.blogData isEqual:otherMessage.blogData]) &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasBlogData) {
    hashCode = hashCode * 31 + [self.blogData hash];
  }
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMBlogSendBuilder()
@property (strong) IMBlogSend* resultImblogSend;
@end

@implementation IMBlogSendBuilder
@synthesize resultImblogSend;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImblogSend = [[IMBlogSend alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImblogSend;
}
- (IMBlogSendBuilder*) clear {
  self.resultImblogSend = [[IMBlogSend alloc] init];
  return self;
}
- (IMBlogSendBuilder*) clone {
  return [IMBlogSend builderWithPrototype:resultImblogSend];
}
- (IMBlogSend*) defaultInstance {
  return [IMBlogSend defaultInstance];
}
- (IMBlogSend*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMBlogSend*) buildPartial {
  IMBlogSend* returnMe = resultImblogSend;
  self.resultImblogSend = nil;
  return returnMe;
}
- (IMBlogSendBuilder*) mergeFrom:(IMBlogSend*) other {
  if (other == [IMBlogSend defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasBlogData) {
    [self setBlogData:other.blogData];
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMBlogSendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMBlogSendBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 18: {
        [self setBlogData:[input readData]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultImblogSend.hasUserId;
}
- (UInt32) userId {
  return resultImblogSend.userId;
}
- (IMBlogSendBuilder*) setUserId:(UInt32) value {
  resultImblogSend.hasUserId = YES;
  resultImblogSend.userId = value;
  return self;
}
- (IMBlogSendBuilder*) clearUserId {
  resultImblogSend.hasUserId = NO;
  resultImblogSend.userId = 0;
  return self;
}
- (BOOL) hasBlogData {
  return resultImblogSend.hasBlogData;
}
- (NSData*) blogData {
  return resultImblogSend.blogData;
}
- (IMBlogSendBuilder*) setBlogData:(NSData*) value {
  resultImblogSend.hasBlogData = YES;
  resultImblogSend.blogData = value;
  return self;
}
- (IMBlogSendBuilder*) clearBlogData {
  resultImblogSend.hasBlogData = NO;
  resultImblogSend.blogData = [NSData data];
  return self;
}
- (BOOL) hasAttachData {
  return resultImblogSend.hasAttachData;
}
- (NSData*) attachData {
  return resultImblogSend.attachData;
}
- (IMBlogSendBuilder*) setAttachData:(NSData*) value {
  resultImblogSend.hasAttachData = YES;
  resultImblogSend.attachData = value;
  return self;
}
- (IMBlogSendBuilder*) clearAttachData {
  resultImblogSend.hasAttachData = NO;
  resultImblogSend.attachData = [NSData data];
  return self;
}
@end

@interface IMBlogSendAck ()
@property UInt32 userId;
@property UInt32 blogId;
@property UInt32 updateTime;
@property (strong) NSData* attachData;
@end

@implementation IMBlogSendAck

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasBlogId {
  return !!hasBlogId_;
}
- (void) setHasBlogId:(BOOL) _value_ {
  hasBlogId_ = !!_value_;
}
@synthesize blogId;
- (BOOL) hasUpdateTime {
  return !!hasUpdateTime_;
}
- (void) setHasUpdateTime:(BOOL) _value_ {
  hasUpdateTime_ = !!_value_;
}
@synthesize updateTime;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) _value_ {
  hasAttachData_ = !!_value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.blogId = 0;
    self.updateTime = 0;
    self.attachData = [NSData data];
  }
  return self;
}
static IMBlogSendAck* defaultIMBlogSendAckInstance = nil;
+ (void) initialize {
  if (self == [IMBlogSendAck class]) {
    defaultIMBlogSendAckInstance = [[IMBlogSendAck alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMBlogSendAckInstance;
}
- (instancetype) defaultInstance {
  return defaultIMBlogSendAckInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasBlogId) {
    return NO;
  }
  if (!self.hasUpdateTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasBlogId) {
    [output writeUInt32:2 value:self.blogId];
  }
  if (self.hasUpdateTime) {
    [output writeUInt32:3 value:self.updateTime];
  }
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasBlogId) {
    size_ += computeUInt32Size(2, self.blogId);
  }
  if (self.hasUpdateTime) {
    size_ += computeUInt32Size(3, self.updateTime);
  }
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMBlogSendAck*) parseFromData:(NSData*) data {
  return (IMBlogSendAck*)[[[IMBlogSendAck builder] mergeFromData:data] build];
}
+ (IMBlogSendAck*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogSendAck*)[[[IMBlogSendAck builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMBlogSendAck*) parseFromInputStream:(NSInputStream*) input {
  return (IMBlogSendAck*)[[[IMBlogSendAck builder] mergeFromInputStream:input] build];
}
+ (IMBlogSendAck*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogSendAck*)[[[IMBlogSendAck builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogSendAck*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMBlogSendAck*)[[[IMBlogSendAck builder] mergeFromCodedInputStream:input] build];
}
+ (IMBlogSendAck*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogSendAck*)[[[IMBlogSendAck builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogSendAckBuilder*) builder {
  return [[IMBlogSendAckBuilder alloc] init];
}
+ (IMBlogSendAckBuilder*) builderWithPrototype:(IMBlogSendAck*) prototype {
  return [[IMBlogSendAck builder] mergeFrom:prototype];
}
- (IMBlogSendAckBuilder*) builder {
  return [IMBlogSendAck builder];
}
- (IMBlogSendAckBuilder*) toBuilder {
  return [IMBlogSendAck builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasBlogId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blogId", [NSNumber numberWithInteger:self.blogId]];
  }
  if (self.hasUpdateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateTime", [NSNumber numberWithInteger:self.updateTime]];
  }
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userId] forKey: @"userId"];
  }
  if (self.hasBlogId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.blogId] forKey: @"blogId"];
  }
  if (self.hasUpdateTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateTime] forKey: @"updateTime"];
  }
  if (self.hasAttachData) {
    [dictionary setObject: self.attachData forKey: @"attachData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMBlogSendAck class]]) {
    return NO;
  }
  IMBlogSendAck *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasBlogId == otherMessage.hasBlogId &&
      (!self.hasBlogId || self.blogId == otherMessage.blogId) &&
      self.hasUpdateTime == otherMessage.hasUpdateTime &&
      (!self.hasUpdateTime || self.updateTime == otherMessage.updateTime) &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasBlogId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.blogId] hash];
  }
  if (self.hasUpdateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateTime] hash];
  }
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMBlogSendAckBuilder()
@property (strong) IMBlogSendAck* resultImblogSendAck;
@end

@implementation IMBlogSendAckBuilder
@synthesize resultImblogSendAck;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImblogSendAck = [[IMBlogSendAck alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImblogSendAck;
}
- (IMBlogSendAckBuilder*) clear {
  self.resultImblogSendAck = [[IMBlogSendAck alloc] init];
  return self;
}
- (IMBlogSendAckBuilder*) clone {
  return [IMBlogSendAck builderWithPrototype:resultImblogSendAck];
}
- (IMBlogSendAck*) defaultInstance {
  return [IMBlogSendAck defaultInstance];
}
- (IMBlogSendAck*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMBlogSendAck*) buildPartial {
  IMBlogSendAck* returnMe = resultImblogSendAck;
  self.resultImblogSendAck = nil;
  return returnMe;
}
- (IMBlogSendAckBuilder*) mergeFrom:(IMBlogSendAck*) other {
  if (other == [IMBlogSendAck defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasBlogId) {
    [self setBlogId:other.blogId];
  }
  if (other.hasUpdateTime) {
    [self setUpdateTime:other.updateTime];
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMBlogSendAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMBlogSendAckBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setBlogId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setUpdateTime:[input readUInt32]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultImblogSendAck.hasUserId;
}
- (UInt32) userId {
  return resultImblogSendAck.userId;
}
- (IMBlogSendAckBuilder*) setUserId:(UInt32) value {
  resultImblogSendAck.hasUserId = YES;
  resultImblogSendAck.userId = value;
  return self;
}
- (IMBlogSendAckBuilder*) clearUserId {
  resultImblogSendAck.hasUserId = NO;
  resultImblogSendAck.userId = 0;
  return self;
}
- (BOOL) hasBlogId {
  return resultImblogSendAck.hasBlogId;
}
- (UInt32) blogId {
  return resultImblogSendAck.blogId;
}
- (IMBlogSendAckBuilder*) setBlogId:(UInt32) value {
  resultImblogSendAck.hasBlogId = YES;
  resultImblogSendAck.blogId = value;
  return self;
}
- (IMBlogSendAckBuilder*) clearBlogId {
  resultImblogSendAck.hasBlogId = NO;
  resultImblogSendAck.blogId = 0;
  return self;
}
- (BOOL) hasUpdateTime {
  return resultImblogSendAck.hasUpdateTime;
}
- (UInt32) updateTime {
  return resultImblogSendAck.updateTime;
}
- (IMBlogSendAckBuilder*) setUpdateTime:(UInt32) value {
  resultImblogSendAck.hasUpdateTime = YES;
  resultImblogSendAck.updateTime = value;
  return self;
}
- (IMBlogSendAckBuilder*) clearUpdateTime {
  resultImblogSendAck.hasUpdateTime = NO;
  resultImblogSendAck.updateTime = 0;
  return self;
}
- (BOOL) hasAttachData {
  return resultImblogSendAck.hasAttachData;
}
- (NSData*) attachData {
  return resultImblogSendAck.attachData;
}
- (IMBlogSendAckBuilder*) setAttachData:(NSData*) value {
  resultImblogSendAck.hasAttachData = YES;
  resultImblogSendAck.attachData = value;
  return self;
}
- (IMBlogSendAckBuilder*) clearAttachData {
  resultImblogSendAck.hasAttachData = NO;
  resultImblogSendAck.attachData = [NSData data];
  return self;
}
@end

@interface IMBlogGetListReq ()
@property UInt32 userId;
@property UInt32 updateTime;
@property BlogType blogType;
@property UInt32 page;
@property UInt32 pageSize;
@property (strong) NSData* attachData;
@end

@implementation IMBlogGetListReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasUpdateTime {
  return !!hasUpdateTime_;
}
- (void) setHasUpdateTime:(BOOL) _value_ {
  hasUpdateTime_ = !!_value_;
}
@synthesize updateTime;
- (BOOL) hasBlogType {
  return !!hasBlogType_;
}
- (void) setHasBlogType:(BOOL) _value_ {
  hasBlogType_ = !!_value_;
}
@synthesize blogType;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (BOOL) hasPageSize {
  return !!hasPageSize_;
}
- (void) setHasPageSize:(BOOL) _value_ {
  hasPageSize_ = !!_value_;
}
@synthesize pageSize;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) _value_ {
  hasAttachData_ = !!_value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.updateTime = 0;
    self.blogType = BlogTypeBlogTypeRcommend;
    self.page = 0;
    self.pageSize = 0;
    self.attachData = [NSData data];
  }
  return self;
}
static IMBlogGetListReq* defaultIMBlogGetListReqInstance = nil;
+ (void) initialize {
  if (self == [IMBlogGetListReq class]) {
    defaultIMBlogGetListReqInstance = [[IMBlogGetListReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMBlogGetListReqInstance;
}
- (instancetype) defaultInstance {
  return defaultIMBlogGetListReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasUpdateTime) {
    return NO;
  }
  if (!self.hasBlogType) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  if (!self.hasPageSize) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasUpdateTime) {
    [output writeUInt32:2 value:self.updateTime];
  }
  if (self.hasBlogType) {
    [output writeEnum:3 value:self.blogType];
  }
  if (self.hasPage) {
    [output writeUInt32:4 value:self.page];
  }
  if (self.hasPageSize) {
    [output writeUInt32:5 value:self.pageSize];
  }
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasUpdateTime) {
    size_ += computeUInt32Size(2, self.updateTime);
  }
  if (self.hasBlogType) {
    size_ += computeEnumSize(3, self.blogType);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(4, self.page);
  }
  if (self.hasPageSize) {
    size_ += computeUInt32Size(5, self.pageSize);
  }
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMBlogGetListReq*) parseFromData:(NSData*) data {
  return (IMBlogGetListReq*)[[[IMBlogGetListReq builder] mergeFromData:data] build];
}
+ (IMBlogGetListReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetListReq*)[[[IMBlogGetListReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetListReq*) parseFromInputStream:(NSInputStream*) input {
  return (IMBlogGetListReq*)[[[IMBlogGetListReq builder] mergeFromInputStream:input] build];
}
+ (IMBlogGetListReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetListReq*)[[[IMBlogGetListReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMBlogGetListReq*)[[[IMBlogGetListReq builder] mergeFromCodedInputStream:input] build];
}
+ (IMBlogGetListReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetListReq*)[[[IMBlogGetListReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetListReqBuilder*) builder {
  return [[IMBlogGetListReqBuilder alloc] init];
}
+ (IMBlogGetListReqBuilder*) builderWithPrototype:(IMBlogGetListReq*) prototype {
  return [[IMBlogGetListReq builder] mergeFrom:prototype];
}
- (IMBlogGetListReqBuilder*) builder {
  return [IMBlogGetListReq builder];
}
- (IMBlogGetListReqBuilder*) toBuilder {
  return [IMBlogGetListReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasUpdateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateTime", [NSNumber numberWithInteger:self.updateTime]];
  }
  if (self.hasBlogType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blogType", NSStringFromBlogType(self.blogType)];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  if (self.hasPageSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageSize", [NSNumber numberWithInteger:self.pageSize]];
  }
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userId] forKey: @"userId"];
  }
  if (self.hasUpdateTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateTime] forKey: @"updateTime"];
  }
  if (self.hasBlogType) {
    [dictionary setObject: @(self.blogType) forKey: @"blogType"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  if (self.hasPageSize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageSize] forKey: @"pageSize"];
  }
  if (self.hasAttachData) {
    [dictionary setObject: self.attachData forKey: @"attachData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMBlogGetListReq class]]) {
    return NO;
  }
  IMBlogGetListReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasUpdateTime == otherMessage.hasUpdateTime &&
      (!self.hasUpdateTime || self.updateTime == otherMessage.updateTime) &&
      self.hasBlogType == otherMessage.hasBlogType &&
      (!self.hasBlogType || self.blogType == otherMessage.blogType) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      self.hasPageSize == otherMessage.hasPageSize &&
      (!self.hasPageSize || self.pageSize == otherMessage.pageSize) &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasUpdateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateTime] hash];
  }
  if (self.hasBlogType) {
    hashCode = hashCode * 31 + self.blogType;
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  if (self.hasPageSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageSize] hash];
  }
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMBlogGetListReqBuilder()
@property (strong) IMBlogGetListReq* resultImblogGetListReq;
@end

@implementation IMBlogGetListReqBuilder
@synthesize resultImblogGetListReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImblogGetListReq = [[IMBlogGetListReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImblogGetListReq;
}
- (IMBlogGetListReqBuilder*) clear {
  self.resultImblogGetListReq = [[IMBlogGetListReq alloc] init];
  return self;
}
- (IMBlogGetListReqBuilder*) clone {
  return [IMBlogGetListReq builderWithPrototype:resultImblogGetListReq];
}
- (IMBlogGetListReq*) defaultInstance {
  return [IMBlogGetListReq defaultInstance];
}
- (IMBlogGetListReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMBlogGetListReq*) buildPartial {
  IMBlogGetListReq* returnMe = resultImblogGetListReq;
  self.resultImblogGetListReq = nil;
  return returnMe;
}
- (IMBlogGetListReqBuilder*) mergeFrom:(IMBlogGetListReq*) other {
  if (other == [IMBlogGetListReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasUpdateTime) {
    [self setUpdateTime:other.updateTime];
  }
  if (other.hasBlogType) {
    [self setBlogType:other.blogType];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.hasPageSize) {
    [self setPageSize:other.pageSize];
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMBlogGetListReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMBlogGetListReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setUpdateTime:[input readUInt32]];
        break;
      }
      case 24: {
        BlogType value = (BlogType)[input readEnum];
        if (BlogTypeIsValidValue(value)) {
          [self setBlogType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 32: {
        [self setPage:[input readUInt32]];
        break;
      }
      case 40: {
        [self setPageSize:[input readUInt32]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultImblogGetListReq.hasUserId;
}
- (UInt32) userId {
  return resultImblogGetListReq.userId;
}
- (IMBlogGetListReqBuilder*) setUserId:(UInt32) value {
  resultImblogGetListReq.hasUserId = YES;
  resultImblogGetListReq.userId = value;
  return self;
}
- (IMBlogGetListReqBuilder*) clearUserId {
  resultImblogGetListReq.hasUserId = NO;
  resultImblogGetListReq.userId = 0;
  return self;
}
- (BOOL) hasUpdateTime {
  return resultImblogGetListReq.hasUpdateTime;
}
- (UInt32) updateTime {
  return resultImblogGetListReq.updateTime;
}
- (IMBlogGetListReqBuilder*) setUpdateTime:(UInt32) value {
  resultImblogGetListReq.hasUpdateTime = YES;
  resultImblogGetListReq.updateTime = value;
  return self;
}
- (IMBlogGetListReqBuilder*) clearUpdateTime {
  resultImblogGetListReq.hasUpdateTime = NO;
  resultImblogGetListReq.updateTime = 0;
  return self;
}
- (BOOL) hasBlogType {
  return resultImblogGetListReq.hasBlogType;
}
- (BlogType) blogType {
  return resultImblogGetListReq.blogType;
}
- (IMBlogGetListReqBuilder*) setBlogType:(BlogType) value {
  resultImblogGetListReq.hasBlogType = YES;
  resultImblogGetListReq.blogType = value;
  return self;
}
- (IMBlogGetListReqBuilder*) clearBlogType {
  resultImblogGetListReq.hasBlogType = NO;
  resultImblogGetListReq.blogType = BlogTypeBlogTypeRcommend;
  return self;
}
- (BOOL) hasPage {
  return resultImblogGetListReq.hasPage;
}
- (UInt32) page {
  return resultImblogGetListReq.page;
}
- (IMBlogGetListReqBuilder*) setPage:(UInt32) value {
  resultImblogGetListReq.hasPage = YES;
  resultImblogGetListReq.page = value;
  return self;
}
- (IMBlogGetListReqBuilder*) clearPage {
  resultImblogGetListReq.hasPage = NO;
  resultImblogGetListReq.page = 0;
  return self;
}
- (BOOL) hasPageSize {
  return resultImblogGetListReq.hasPageSize;
}
- (UInt32) pageSize {
  return resultImblogGetListReq.pageSize;
}
- (IMBlogGetListReqBuilder*) setPageSize:(UInt32) value {
  resultImblogGetListReq.hasPageSize = YES;
  resultImblogGetListReq.pageSize = value;
  return self;
}
- (IMBlogGetListReqBuilder*) clearPageSize {
  resultImblogGetListReq.hasPageSize = NO;
  resultImblogGetListReq.pageSize = 0;
  return self;
}
- (BOOL) hasAttachData {
  return resultImblogGetListReq.hasAttachData;
}
- (NSData*) attachData {
  return resultImblogGetListReq.attachData;
}
- (IMBlogGetListReqBuilder*) setAttachData:(NSData*) value {
  resultImblogGetListReq.hasAttachData = YES;
  resultImblogGetListReq.attachData = value;
  return self;
}
- (IMBlogGetListReqBuilder*) clearAttachData {
  resultImblogGetListReq.hasAttachData = NO;
  resultImblogGetListReq.attachData = [NSData data];
  return self;
}
@end

@interface IMBlogGetListRsp ()
@property UInt32 userId;
@property BlogType blogType;
@property UInt32 page;
@property UInt32 pageSize;
@property (strong) NSMutableArray<BlogInfo*> * blogListArray;
@property (strong) NSData* attachData;
@end

@implementation IMBlogGetListRsp

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasBlogType {
  return !!hasBlogType_;
}
- (void) setHasBlogType:(BOOL) _value_ {
  hasBlogType_ = !!_value_;
}
@synthesize blogType;
- (BOOL) hasPage {
  return !!hasPage_;
}
- (void) setHasPage:(BOOL) _value_ {
  hasPage_ = !!_value_;
}
@synthesize page;
- (BOOL) hasPageSize {
  return !!hasPageSize_;
}
- (void) setHasPageSize:(BOOL) _value_ {
  hasPageSize_ = !!_value_;
}
@synthesize pageSize;
@synthesize blogListArray;
@dynamic blogList;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) _value_ {
  hasAttachData_ = !!_value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.blogType = BlogTypeBlogTypeRcommend;
    self.page = 0;
    self.pageSize = 0;
    self.attachData = [NSData data];
  }
  return self;
}
static IMBlogGetListRsp* defaultIMBlogGetListRspInstance = nil;
+ (void) initialize {
  if (self == [IMBlogGetListRsp class]) {
    defaultIMBlogGetListRspInstance = [[IMBlogGetListRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMBlogGetListRspInstance;
}
- (instancetype) defaultInstance {
  return defaultIMBlogGetListRspInstance;
}
- (NSArray<BlogInfo*> *)blogList {
  return blogListArray;
}
- (BlogInfo*)blogListAtIndex:(NSUInteger)index {
  return [blogListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasBlogType) {
    return NO;
  }
  if (!self.hasPage) {
    return NO;
  }
  if (!self.hasPageSize) {
    return NO;
  }
  __block BOOL isInitblogList = YES;
   [self.blogList enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitblogList = NO;
      *stop = YES;
    }
  }];
  if (!isInitblogList) return isInitblogList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasBlogType) {
    [output writeEnum:2 value:self.blogType];
  }
  if (self.hasPage) {
    [output writeUInt32:3 value:self.page];
  }
  if (self.hasPageSize) {
    [output writeUInt32:4 value:self.pageSize];
  }
  [self.blogListArray enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:5 value:element];
  }];
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasBlogType) {
    size_ += computeEnumSize(2, self.blogType);
  }
  if (self.hasPage) {
    size_ += computeUInt32Size(3, self.page);
  }
  if (self.hasPageSize) {
    size_ += computeUInt32Size(4, self.pageSize);
  }
  [self.blogListArray enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(5, element);
  }];
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMBlogGetListRsp*) parseFromData:(NSData*) data {
  return (IMBlogGetListRsp*)[[[IMBlogGetListRsp builder] mergeFromData:data] build];
}
+ (IMBlogGetListRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetListRsp*)[[[IMBlogGetListRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetListRsp*) parseFromInputStream:(NSInputStream*) input {
  return (IMBlogGetListRsp*)[[[IMBlogGetListRsp builder] mergeFromInputStream:input] build];
}
+ (IMBlogGetListRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetListRsp*)[[[IMBlogGetListRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMBlogGetListRsp*)[[[IMBlogGetListRsp builder] mergeFromCodedInputStream:input] build];
}
+ (IMBlogGetListRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetListRsp*)[[[IMBlogGetListRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetListRspBuilder*) builder {
  return [[IMBlogGetListRspBuilder alloc] init];
}
+ (IMBlogGetListRspBuilder*) builderWithPrototype:(IMBlogGetListRsp*) prototype {
  return [[IMBlogGetListRsp builder] mergeFrom:prototype];
}
- (IMBlogGetListRspBuilder*) builder {
  return [IMBlogGetListRsp builder];
}
- (IMBlogGetListRspBuilder*) toBuilder {
  return [IMBlogGetListRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasBlogType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blogType", NSStringFromBlogType(self.blogType)];
  }
  if (self.hasPage) {
    [output appendFormat:@"%@%@: %@\n", indent, @"page", [NSNumber numberWithInteger:self.page]];
  }
  if (self.hasPageSize) {
    [output appendFormat:@"%@%@: %@\n", indent, @"pageSize", [NSNumber numberWithInteger:self.pageSize]];
  }
  [self.blogListArray enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"blogList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userId] forKey: @"userId"];
  }
  if (self.hasBlogType) {
    [dictionary setObject: @(self.blogType) forKey: @"blogType"];
  }
  if (self.hasPage) {
    [dictionary setObject: [NSNumber numberWithInteger:self.page] forKey: @"page"];
  }
  if (self.hasPageSize) {
    [dictionary setObject: [NSNumber numberWithInteger:self.pageSize] forKey: @"pageSize"];
  }
  for (BlogInfo* element in self.blogListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"blogList"];
  }
  if (self.hasAttachData) {
    [dictionary setObject: self.attachData forKey: @"attachData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMBlogGetListRsp class]]) {
    return NO;
  }
  IMBlogGetListRsp *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasBlogType == otherMessage.hasBlogType &&
      (!self.hasBlogType || self.blogType == otherMessage.blogType) &&
      self.hasPage == otherMessage.hasPage &&
      (!self.hasPage || self.page == otherMessage.page) &&
      self.hasPageSize == otherMessage.hasPageSize &&
      (!self.hasPageSize || self.pageSize == otherMessage.pageSize) &&
      [self.blogListArray isEqualToArray:otherMessage.blogListArray] &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasBlogType) {
    hashCode = hashCode * 31 + self.blogType;
  }
  if (self.hasPage) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.page] hash];
  }
  if (self.hasPageSize) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.pageSize] hash];
  }
  [self.blogListArray enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMBlogGetListRspBuilder()
@property (strong) IMBlogGetListRsp* resultImblogGetListRsp;
@end

@implementation IMBlogGetListRspBuilder
@synthesize resultImblogGetListRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImblogGetListRsp = [[IMBlogGetListRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImblogGetListRsp;
}
- (IMBlogGetListRspBuilder*) clear {
  self.resultImblogGetListRsp = [[IMBlogGetListRsp alloc] init];
  return self;
}
- (IMBlogGetListRspBuilder*) clone {
  return [IMBlogGetListRsp builderWithPrototype:resultImblogGetListRsp];
}
- (IMBlogGetListRsp*) defaultInstance {
  return [IMBlogGetListRsp defaultInstance];
}
- (IMBlogGetListRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMBlogGetListRsp*) buildPartial {
  IMBlogGetListRsp* returnMe = resultImblogGetListRsp;
  self.resultImblogGetListRsp = nil;
  return returnMe;
}
- (IMBlogGetListRspBuilder*) mergeFrom:(IMBlogGetListRsp*) other {
  if (other == [IMBlogGetListRsp defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasBlogType) {
    [self setBlogType:other.blogType];
  }
  if (other.hasPage) {
    [self setPage:other.page];
  }
  if (other.hasPageSize) {
    [self setPageSize:other.pageSize];
  }
  if (other.blogListArray.count > 0) {
    if (resultImblogGetListRsp.blogListArray == nil) {
      resultImblogGetListRsp.blogListArray = [[NSMutableArray alloc] initWithArray:other.blogListArray];
    } else {
      [resultImblogGetListRsp.blogListArray addObjectsFromArray:other.blogListArray];
    }
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMBlogGetListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMBlogGetListRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        BlogType value = (BlogType)[input readEnum];
        if (BlogTypeIsValidValue(value)) {
          [self setBlogType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        [self setPage:[input readUInt32]];
        break;
      }
      case 32: {
        [self setPageSize:[input readUInt32]];
        break;
      }
      case 42: {
        BlogInfoBuilder* subBuilder = [BlogInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBlogList:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultImblogGetListRsp.hasUserId;
}
- (UInt32) userId {
  return resultImblogGetListRsp.userId;
}
- (IMBlogGetListRspBuilder*) setUserId:(UInt32) value {
  resultImblogGetListRsp.hasUserId = YES;
  resultImblogGetListRsp.userId = value;
  return self;
}
- (IMBlogGetListRspBuilder*) clearUserId {
  resultImblogGetListRsp.hasUserId = NO;
  resultImblogGetListRsp.userId = 0;
  return self;
}
- (BOOL) hasBlogType {
  return resultImblogGetListRsp.hasBlogType;
}
- (BlogType) blogType {
  return resultImblogGetListRsp.blogType;
}
- (IMBlogGetListRspBuilder*) setBlogType:(BlogType) value {
  resultImblogGetListRsp.hasBlogType = YES;
  resultImblogGetListRsp.blogType = value;
  return self;
}
- (IMBlogGetListRspBuilder*) clearBlogType {
  resultImblogGetListRsp.hasBlogType = NO;
  resultImblogGetListRsp.blogType = BlogTypeBlogTypeRcommend;
  return self;
}
- (BOOL) hasPage {
  return resultImblogGetListRsp.hasPage;
}
- (UInt32) page {
  return resultImblogGetListRsp.page;
}
- (IMBlogGetListRspBuilder*) setPage:(UInt32) value {
  resultImblogGetListRsp.hasPage = YES;
  resultImblogGetListRsp.page = value;
  return self;
}
- (IMBlogGetListRspBuilder*) clearPage {
  resultImblogGetListRsp.hasPage = NO;
  resultImblogGetListRsp.page = 0;
  return self;
}
- (BOOL) hasPageSize {
  return resultImblogGetListRsp.hasPageSize;
}
- (UInt32) pageSize {
  return resultImblogGetListRsp.pageSize;
}
- (IMBlogGetListRspBuilder*) setPageSize:(UInt32) value {
  resultImblogGetListRsp.hasPageSize = YES;
  resultImblogGetListRsp.pageSize = value;
  return self;
}
- (IMBlogGetListRspBuilder*) clearPageSize {
  resultImblogGetListRsp.hasPageSize = NO;
  resultImblogGetListRsp.pageSize = 0;
  return self;
}
- (NSMutableArray<BlogInfo*> *)blogList {
  return resultImblogGetListRsp.blogListArray;
}
- (BlogInfo*)blogListAtIndex:(NSUInteger)index {
  return [resultImblogGetListRsp blogListAtIndex:index];
}
- (IMBlogGetListRspBuilder *)addBlogList:(BlogInfo*)value {
  if (resultImblogGetListRsp.blogListArray == nil) {
    resultImblogGetListRsp.blogListArray = [[NSMutableArray alloc]init];
  }
  [resultImblogGetListRsp.blogListArray addObject:value];
  return self;
}
- (IMBlogGetListRspBuilder *)setBlogListArray:(NSArray<BlogInfo*> *)array {
  resultImblogGetListRsp.blogListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (IMBlogGetListRspBuilder *)clearBlogList {
  resultImblogGetListRsp.blogListArray = nil;
  return self;
}
- (BOOL) hasAttachData {
  return resultImblogGetListRsp.hasAttachData;
}
- (NSData*) attachData {
  return resultImblogGetListRsp.attachData;
}
- (IMBlogGetListRspBuilder*) setAttachData:(NSData*) value {
  resultImblogGetListRsp.hasAttachData = YES;
  resultImblogGetListRsp.attachData = value;
  return self;
}
- (IMBlogGetListRspBuilder*) clearAttachData {
  resultImblogGetListRsp.hasAttachData = NO;
  resultImblogGetListRsp.attachData = [NSData data];
  return self;
}
@end

@interface IMBlogAddCommentReq ()
@property UInt32 userId;
@property UInt32 blogId;
@property (strong) NSData* blogData;
@property (strong) NSData* attachData;
@end

@implementation IMBlogAddCommentReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasBlogId {
  return !!hasBlogId_;
}
- (void) setHasBlogId:(BOOL) _value_ {
  hasBlogId_ = !!_value_;
}
@synthesize blogId;
- (BOOL) hasBlogData {
  return !!hasBlogData_;
}
- (void) setHasBlogData:(BOOL) _value_ {
  hasBlogData_ = !!_value_;
}
@synthesize blogData;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) _value_ {
  hasAttachData_ = !!_value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.blogId = 0;
    self.blogData = [NSData data];
    self.attachData = [NSData data];
  }
  return self;
}
static IMBlogAddCommentReq* defaultIMBlogAddCommentReqInstance = nil;
+ (void) initialize {
  if (self == [IMBlogAddCommentReq class]) {
    defaultIMBlogAddCommentReqInstance = [[IMBlogAddCommentReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMBlogAddCommentReqInstance;
}
- (instancetype) defaultInstance {
  return defaultIMBlogAddCommentReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasBlogId) {
    return NO;
  }
  if (!self.hasBlogData) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasBlogId) {
    [output writeUInt32:2 value:self.blogId];
  }
  if (self.hasBlogData) {
    [output writeData:3 value:self.blogData];
  }
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasBlogId) {
    size_ += computeUInt32Size(2, self.blogId);
  }
  if (self.hasBlogData) {
    size_ += computeDataSize(3, self.blogData);
  }
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMBlogAddCommentReq*) parseFromData:(NSData*) data {
  return (IMBlogAddCommentReq*)[[[IMBlogAddCommentReq builder] mergeFromData:data] build];
}
+ (IMBlogAddCommentReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogAddCommentReq*)[[[IMBlogAddCommentReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMBlogAddCommentReq*) parseFromInputStream:(NSInputStream*) input {
  return (IMBlogAddCommentReq*)[[[IMBlogAddCommentReq builder] mergeFromInputStream:input] build];
}
+ (IMBlogAddCommentReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogAddCommentReq*)[[[IMBlogAddCommentReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogAddCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMBlogAddCommentReq*)[[[IMBlogAddCommentReq builder] mergeFromCodedInputStream:input] build];
}
+ (IMBlogAddCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogAddCommentReq*)[[[IMBlogAddCommentReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogAddCommentReqBuilder*) builder {
  return [[IMBlogAddCommentReqBuilder alloc] init];
}
+ (IMBlogAddCommentReqBuilder*) builderWithPrototype:(IMBlogAddCommentReq*) prototype {
  return [[IMBlogAddCommentReq builder] mergeFrom:prototype];
}
- (IMBlogAddCommentReqBuilder*) builder {
  return [IMBlogAddCommentReq builder];
}
- (IMBlogAddCommentReqBuilder*) toBuilder {
  return [IMBlogAddCommentReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasBlogId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blogId", [NSNumber numberWithInteger:self.blogId]];
  }
  if (self.hasBlogData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blogData", self.blogData];
  }
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userId] forKey: @"userId"];
  }
  if (self.hasBlogId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.blogId] forKey: @"blogId"];
  }
  if (self.hasBlogData) {
    [dictionary setObject: self.blogData forKey: @"blogData"];
  }
  if (self.hasAttachData) {
    [dictionary setObject: self.attachData forKey: @"attachData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMBlogAddCommentReq class]]) {
    return NO;
  }
  IMBlogAddCommentReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasBlogId == otherMessage.hasBlogId &&
      (!self.hasBlogId || self.blogId == otherMessage.blogId) &&
      self.hasBlogData == otherMessage.hasBlogData &&
      (!self.hasBlogData || [self.blogData isEqual:otherMessage.blogData]) &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasBlogId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.blogId] hash];
  }
  if (self.hasBlogData) {
    hashCode = hashCode * 31 + [self.blogData hash];
  }
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMBlogAddCommentReqBuilder()
@property (strong) IMBlogAddCommentReq* resultImblogAddCommentReq;
@end

@implementation IMBlogAddCommentReqBuilder
@synthesize resultImblogAddCommentReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImblogAddCommentReq = [[IMBlogAddCommentReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImblogAddCommentReq;
}
- (IMBlogAddCommentReqBuilder*) clear {
  self.resultImblogAddCommentReq = [[IMBlogAddCommentReq alloc] init];
  return self;
}
- (IMBlogAddCommentReqBuilder*) clone {
  return [IMBlogAddCommentReq builderWithPrototype:resultImblogAddCommentReq];
}
- (IMBlogAddCommentReq*) defaultInstance {
  return [IMBlogAddCommentReq defaultInstance];
}
- (IMBlogAddCommentReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMBlogAddCommentReq*) buildPartial {
  IMBlogAddCommentReq* returnMe = resultImblogAddCommentReq;
  self.resultImblogAddCommentReq = nil;
  return returnMe;
}
- (IMBlogAddCommentReqBuilder*) mergeFrom:(IMBlogAddCommentReq*) other {
  if (other == [IMBlogAddCommentReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasBlogId) {
    [self setBlogId:other.blogId];
  }
  if (other.hasBlogData) {
    [self setBlogData:other.blogData];
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMBlogAddCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMBlogAddCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setBlogId:[input readUInt32]];
        break;
      }
      case 26: {
        [self setBlogData:[input readData]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultImblogAddCommentReq.hasUserId;
}
- (UInt32) userId {
  return resultImblogAddCommentReq.userId;
}
- (IMBlogAddCommentReqBuilder*) setUserId:(UInt32) value {
  resultImblogAddCommentReq.hasUserId = YES;
  resultImblogAddCommentReq.userId = value;
  return self;
}
- (IMBlogAddCommentReqBuilder*) clearUserId {
  resultImblogAddCommentReq.hasUserId = NO;
  resultImblogAddCommentReq.userId = 0;
  return self;
}
- (BOOL) hasBlogId {
  return resultImblogAddCommentReq.hasBlogId;
}
- (UInt32) blogId {
  return resultImblogAddCommentReq.blogId;
}
- (IMBlogAddCommentReqBuilder*) setBlogId:(UInt32) value {
  resultImblogAddCommentReq.hasBlogId = YES;
  resultImblogAddCommentReq.blogId = value;
  return self;
}
- (IMBlogAddCommentReqBuilder*) clearBlogId {
  resultImblogAddCommentReq.hasBlogId = NO;
  resultImblogAddCommentReq.blogId = 0;
  return self;
}
- (BOOL) hasBlogData {
  return resultImblogAddCommentReq.hasBlogData;
}
- (NSData*) blogData {
  return resultImblogAddCommentReq.blogData;
}
- (IMBlogAddCommentReqBuilder*) setBlogData:(NSData*) value {
  resultImblogAddCommentReq.hasBlogData = YES;
  resultImblogAddCommentReq.blogData = value;
  return self;
}
- (IMBlogAddCommentReqBuilder*) clearBlogData {
  resultImblogAddCommentReq.hasBlogData = NO;
  resultImblogAddCommentReq.blogData = [NSData data];
  return self;
}
- (BOOL) hasAttachData {
  return resultImblogAddCommentReq.hasAttachData;
}
- (NSData*) attachData {
  return resultImblogAddCommentReq.attachData;
}
- (IMBlogAddCommentReqBuilder*) setAttachData:(NSData*) value {
  resultImblogAddCommentReq.hasAttachData = YES;
  resultImblogAddCommentReq.attachData = value;
  return self;
}
- (IMBlogAddCommentReqBuilder*) clearAttachData {
  resultImblogAddCommentReq.hasAttachData = NO;
  resultImblogAddCommentReq.attachData = [NSData data];
  return self;
}
@end

@interface IMBlogAddCommentRsp ()
@property UInt32 userId;
@property UInt32 commentId;
@property UInt32 updateTime;
@property UInt32 resultCode;
@property (strong) NSData* attachData;
@end

@implementation IMBlogAddCommentRsp

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasCommentId {
  return !!hasCommentId_;
}
- (void) setHasCommentId:(BOOL) _value_ {
  hasCommentId_ = !!_value_;
}
@synthesize commentId;
- (BOOL) hasUpdateTime {
  return !!hasUpdateTime_;
}
- (void) setHasUpdateTime:(BOOL) _value_ {
  hasUpdateTime_ = !!_value_;
}
@synthesize updateTime;
- (BOOL) hasResultCode {
  return !!hasResultCode_;
}
- (void) setHasResultCode:(BOOL) _value_ {
  hasResultCode_ = !!_value_;
}
@synthesize resultCode;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) _value_ {
  hasAttachData_ = !!_value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.commentId = 0;
    self.updateTime = 0;
    self.resultCode = 0;
    self.attachData = [NSData data];
  }
  return self;
}
static IMBlogAddCommentRsp* defaultIMBlogAddCommentRspInstance = nil;
+ (void) initialize {
  if (self == [IMBlogAddCommentRsp class]) {
    defaultIMBlogAddCommentRspInstance = [[IMBlogAddCommentRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMBlogAddCommentRspInstance;
}
- (instancetype) defaultInstance {
  return defaultIMBlogAddCommentRspInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasCommentId) {
    return NO;
  }
  if (!self.hasUpdateTime) {
    return NO;
  }
  if (!self.hasResultCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasCommentId) {
    [output writeUInt32:2 value:self.commentId];
  }
  if (self.hasUpdateTime) {
    [output writeUInt32:3 value:self.updateTime];
  }
  if (self.hasResultCode) {
    [output writeUInt32:4 value:self.resultCode];
  }
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasCommentId) {
    size_ += computeUInt32Size(2, self.commentId);
  }
  if (self.hasUpdateTime) {
    size_ += computeUInt32Size(3, self.updateTime);
  }
  if (self.hasResultCode) {
    size_ += computeUInt32Size(4, self.resultCode);
  }
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMBlogAddCommentRsp*) parseFromData:(NSData*) data {
  return (IMBlogAddCommentRsp*)[[[IMBlogAddCommentRsp builder] mergeFromData:data] build];
}
+ (IMBlogAddCommentRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogAddCommentRsp*)[[[IMBlogAddCommentRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMBlogAddCommentRsp*) parseFromInputStream:(NSInputStream*) input {
  return (IMBlogAddCommentRsp*)[[[IMBlogAddCommentRsp builder] mergeFromInputStream:input] build];
}
+ (IMBlogAddCommentRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogAddCommentRsp*)[[[IMBlogAddCommentRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogAddCommentRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMBlogAddCommentRsp*)[[[IMBlogAddCommentRsp builder] mergeFromCodedInputStream:input] build];
}
+ (IMBlogAddCommentRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogAddCommentRsp*)[[[IMBlogAddCommentRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogAddCommentRspBuilder*) builder {
  return [[IMBlogAddCommentRspBuilder alloc] init];
}
+ (IMBlogAddCommentRspBuilder*) builderWithPrototype:(IMBlogAddCommentRsp*) prototype {
  return [[IMBlogAddCommentRsp builder] mergeFrom:prototype];
}
- (IMBlogAddCommentRspBuilder*) builder {
  return [IMBlogAddCommentRsp builder];
}
- (IMBlogAddCommentRspBuilder*) toBuilder {
  return [IMBlogAddCommentRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasCommentId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"commentId", [NSNumber numberWithInteger:self.commentId]];
  }
  if (self.hasUpdateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateTime", [NSNumber numberWithInteger:self.updateTime]];
  }
  if (self.hasResultCode) {
    [output appendFormat:@"%@%@: %@\n", indent, @"resultCode", [NSNumber numberWithInteger:self.resultCode]];
  }
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userId] forKey: @"userId"];
  }
  if (self.hasCommentId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.commentId] forKey: @"commentId"];
  }
  if (self.hasUpdateTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateTime] forKey: @"updateTime"];
  }
  if (self.hasResultCode) {
    [dictionary setObject: [NSNumber numberWithInteger:self.resultCode] forKey: @"resultCode"];
  }
  if (self.hasAttachData) {
    [dictionary setObject: self.attachData forKey: @"attachData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMBlogAddCommentRsp class]]) {
    return NO;
  }
  IMBlogAddCommentRsp *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasCommentId == otherMessage.hasCommentId &&
      (!self.hasCommentId || self.commentId == otherMessage.commentId) &&
      self.hasUpdateTime == otherMessage.hasUpdateTime &&
      (!self.hasUpdateTime || self.updateTime == otherMessage.updateTime) &&
      self.hasResultCode == otherMessage.hasResultCode &&
      (!self.hasResultCode || self.resultCode == otherMessage.resultCode) &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasCommentId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.commentId] hash];
  }
  if (self.hasUpdateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateTime] hash];
  }
  if (self.hasResultCode) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.resultCode] hash];
  }
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMBlogAddCommentRspBuilder()
@property (strong) IMBlogAddCommentRsp* resultImblogAddCommentRsp;
@end

@implementation IMBlogAddCommentRspBuilder
@synthesize resultImblogAddCommentRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImblogAddCommentRsp = [[IMBlogAddCommentRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImblogAddCommentRsp;
}
- (IMBlogAddCommentRspBuilder*) clear {
  self.resultImblogAddCommentRsp = [[IMBlogAddCommentRsp alloc] init];
  return self;
}
- (IMBlogAddCommentRspBuilder*) clone {
  return [IMBlogAddCommentRsp builderWithPrototype:resultImblogAddCommentRsp];
}
- (IMBlogAddCommentRsp*) defaultInstance {
  return [IMBlogAddCommentRsp defaultInstance];
}
- (IMBlogAddCommentRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMBlogAddCommentRsp*) buildPartial {
  IMBlogAddCommentRsp* returnMe = resultImblogAddCommentRsp;
  self.resultImblogAddCommentRsp = nil;
  return returnMe;
}
- (IMBlogAddCommentRspBuilder*) mergeFrom:(IMBlogAddCommentRsp*) other {
  if (other == [IMBlogAddCommentRsp defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasCommentId) {
    [self setCommentId:other.commentId];
  }
  if (other.hasUpdateTime) {
    [self setUpdateTime:other.updateTime];
  }
  if (other.hasResultCode) {
    [self setResultCode:other.resultCode];
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMBlogAddCommentRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMBlogAddCommentRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setCommentId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setUpdateTime:[input readUInt32]];
        break;
      }
      case 32: {
        [self setResultCode:[input readUInt32]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultImblogAddCommentRsp.hasUserId;
}
- (UInt32) userId {
  return resultImblogAddCommentRsp.userId;
}
- (IMBlogAddCommentRspBuilder*) setUserId:(UInt32) value {
  resultImblogAddCommentRsp.hasUserId = YES;
  resultImblogAddCommentRsp.userId = value;
  return self;
}
- (IMBlogAddCommentRspBuilder*) clearUserId {
  resultImblogAddCommentRsp.hasUserId = NO;
  resultImblogAddCommentRsp.userId = 0;
  return self;
}
- (BOOL) hasCommentId {
  return resultImblogAddCommentRsp.hasCommentId;
}
- (UInt32) commentId {
  return resultImblogAddCommentRsp.commentId;
}
- (IMBlogAddCommentRspBuilder*) setCommentId:(UInt32) value {
  resultImblogAddCommentRsp.hasCommentId = YES;
  resultImblogAddCommentRsp.commentId = value;
  return self;
}
- (IMBlogAddCommentRspBuilder*) clearCommentId {
  resultImblogAddCommentRsp.hasCommentId = NO;
  resultImblogAddCommentRsp.commentId = 0;
  return self;
}
- (BOOL) hasUpdateTime {
  return resultImblogAddCommentRsp.hasUpdateTime;
}
- (UInt32) updateTime {
  return resultImblogAddCommentRsp.updateTime;
}
- (IMBlogAddCommentRspBuilder*) setUpdateTime:(UInt32) value {
  resultImblogAddCommentRsp.hasUpdateTime = YES;
  resultImblogAddCommentRsp.updateTime = value;
  return self;
}
- (IMBlogAddCommentRspBuilder*) clearUpdateTime {
  resultImblogAddCommentRsp.hasUpdateTime = NO;
  resultImblogAddCommentRsp.updateTime = 0;
  return self;
}
- (BOOL) hasResultCode {
  return resultImblogAddCommentRsp.hasResultCode;
}
- (UInt32) resultCode {
  return resultImblogAddCommentRsp.resultCode;
}
- (IMBlogAddCommentRspBuilder*) setResultCode:(UInt32) value {
  resultImblogAddCommentRsp.hasResultCode = YES;
  resultImblogAddCommentRsp.resultCode = value;
  return self;
}
- (IMBlogAddCommentRspBuilder*) clearResultCode {
  resultImblogAddCommentRsp.hasResultCode = NO;
  resultImblogAddCommentRsp.resultCode = 0;
  return self;
}
- (BOOL) hasAttachData {
  return resultImblogAddCommentRsp.hasAttachData;
}
- (NSData*) attachData {
  return resultImblogAddCommentRsp.attachData;
}
- (IMBlogAddCommentRspBuilder*) setAttachData:(NSData*) value {
  resultImblogAddCommentRsp.hasAttachData = YES;
  resultImblogAddCommentRsp.attachData = value;
  return self;
}
- (IMBlogAddCommentRspBuilder*) clearAttachData {
  resultImblogAddCommentRsp.hasAttachData = NO;
  resultImblogAddCommentRsp.attachData = [NSData data];
  return self;
}
@end

@interface IMBlogGetCommentReq ()
@property UInt32 userId;
@property UInt32 blogId;
@property UInt32 updateTime;
@property (strong) NSData* attachData;
@end

@implementation IMBlogGetCommentReq

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasBlogId {
  return !!hasBlogId_;
}
- (void) setHasBlogId:(BOOL) _value_ {
  hasBlogId_ = !!_value_;
}
@synthesize blogId;
- (BOOL) hasUpdateTime {
  return !!hasUpdateTime_;
}
- (void) setHasUpdateTime:(BOOL) _value_ {
  hasUpdateTime_ = !!_value_;
}
@synthesize updateTime;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) _value_ {
  hasAttachData_ = !!_value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.blogId = 0;
    self.updateTime = 0;
    self.attachData = [NSData data];
  }
  return self;
}
static IMBlogGetCommentReq* defaultIMBlogGetCommentReqInstance = nil;
+ (void) initialize {
  if (self == [IMBlogGetCommentReq class]) {
    defaultIMBlogGetCommentReqInstance = [[IMBlogGetCommentReq alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMBlogGetCommentReqInstance;
}
- (instancetype) defaultInstance {
  return defaultIMBlogGetCommentReqInstance;
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasBlogId) {
    return NO;
  }
  if (!self.hasUpdateTime) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasBlogId) {
    [output writeUInt32:2 value:self.blogId];
  }
  if (self.hasUpdateTime) {
    [output writeUInt32:3 value:self.updateTime];
  }
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasBlogId) {
    size_ += computeUInt32Size(2, self.blogId);
  }
  if (self.hasUpdateTime) {
    size_ += computeUInt32Size(3, self.updateTime);
  }
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMBlogGetCommentReq*) parseFromData:(NSData*) data {
  return (IMBlogGetCommentReq*)[[[IMBlogGetCommentReq builder] mergeFromData:data] build];
}
+ (IMBlogGetCommentReq*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetCommentReq*)[[[IMBlogGetCommentReq builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetCommentReq*) parseFromInputStream:(NSInputStream*) input {
  return (IMBlogGetCommentReq*)[[[IMBlogGetCommentReq builder] mergeFromInputStream:input] build];
}
+ (IMBlogGetCommentReq*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetCommentReq*)[[[IMBlogGetCommentReq builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMBlogGetCommentReq*)[[[IMBlogGetCommentReq builder] mergeFromCodedInputStream:input] build];
}
+ (IMBlogGetCommentReq*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetCommentReq*)[[[IMBlogGetCommentReq builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetCommentReqBuilder*) builder {
  return [[IMBlogGetCommentReqBuilder alloc] init];
}
+ (IMBlogGetCommentReqBuilder*) builderWithPrototype:(IMBlogGetCommentReq*) prototype {
  return [[IMBlogGetCommentReq builder] mergeFrom:prototype];
}
- (IMBlogGetCommentReqBuilder*) builder {
  return [IMBlogGetCommentReq builder];
}
- (IMBlogGetCommentReqBuilder*) toBuilder {
  return [IMBlogGetCommentReq builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasBlogId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blogId", [NSNumber numberWithInteger:self.blogId]];
  }
  if (self.hasUpdateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateTime", [NSNumber numberWithInteger:self.updateTime]];
  }
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userId] forKey: @"userId"];
  }
  if (self.hasBlogId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.blogId] forKey: @"blogId"];
  }
  if (self.hasUpdateTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateTime] forKey: @"updateTime"];
  }
  if (self.hasAttachData) {
    [dictionary setObject: self.attachData forKey: @"attachData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMBlogGetCommentReq class]]) {
    return NO;
  }
  IMBlogGetCommentReq *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasBlogId == otherMessage.hasBlogId &&
      (!self.hasBlogId || self.blogId == otherMessage.blogId) &&
      self.hasUpdateTime == otherMessage.hasUpdateTime &&
      (!self.hasUpdateTime || self.updateTime == otherMessage.updateTime) &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasBlogId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.blogId] hash];
  }
  if (self.hasUpdateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateTime] hash];
  }
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMBlogGetCommentReqBuilder()
@property (strong) IMBlogGetCommentReq* resultImblogGetCommentReq;
@end

@implementation IMBlogGetCommentReqBuilder
@synthesize resultImblogGetCommentReq;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImblogGetCommentReq = [[IMBlogGetCommentReq alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImblogGetCommentReq;
}
- (IMBlogGetCommentReqBuilder*) clear {
  self.resultImblogGetCommentReq = [[IMBlogGetCommentReq alloc] init];
  return self;
}
- (IMBlogGetCommentReqBuilder*) clone {
  return [IMBlogGetCommentReq builderWithPrototype:resultImblogGetCommentReq];
}
- (IMBlogGetCommentReq*) defaultInstance {
  return [IMBlogGetCommentReq defaultInstance];
}
- (IMBlogGetCommentReq*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMBlogGetCommentReq*) buildPartial {
  IMBlogGetCommentReq* returnMe = resultImblogGetCommentReq;
  self.resultImblogGetCommentReq = nil;
  return returnMe;
}
- (IMBlogGetCommentReqBuilder*) mergeFrom:(IMBlogGetCommentReq*) other {
  if (other == [IMBlogGetCommentReq defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasBlogId) {
    [self setBlogId:other.blogId];
  }
  if (other.hasUpdateTime) {
    [self setUpdateTime:other.updateTime];
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMBlogGetCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMBlogGetCommentReqBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setBlogId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setUpdateTime:[input readUInt32]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultImblogGetCommentReq.hasUserId;
}
- (UInt32) userId {
  return resultImblogGetCommentReq.userId;
}
- (IMBlogGetCommentReqBuilder*) setUserId:(UInt32) value {
  resultImblogGetCommentReq.hasUserId = YES;
  resultImblogGetCommentReq.userId = value;
  return self;
}
- (IMBlogGetCommentReqBuilder*) clearUserId {
  resultImblogGetCommentReq.hasUserId = NO;
  resultImblogGetCommentReq.userId = 0;
  return self;
}
- (BOOL) hasBlogId {
  return resultImblogGetCommentReq.hasBlogId;
}
- (UInt32) blogId {
  return resultImblogGetCommentReq.blogId;
}
- (IMBlogGetCommentReqBuilder*) setBlogId:(UInt32) value {
  resultImblogGetCommentReq.hasBlogId = YES;
  resultImblogGetCommentReq.blogId = value;
  return self;
}
- (IMBlogGetCommentReqBuilder*) clearBlogId {
  resultImblogGetCommentReq.hasBlogId = NO;
  resultImblogGetCommentReq.blogId = 0;
  return self;
}
- (BOOL) hasUpdateTime {
  return resultImblogGetCommentReq.hasUpdateTime;
}
- (UInt32) updateTime {
  return resultImblogGetCommentReq.updateTime;
}
- (IMBlogGetCommentReqBuilder*) setUpdateTime:(UInt32) value {
  resultImblogGetCommentReq.hasUpdateTime = YES;
  resultImblogGetCommentReq.updateTime = value;
  return self;
}
- (IMBlogGetCommentReqBuilder*) clearUpdateTime {
  resultImblogGetCommentReq.hasUpdateTime = NO;
  resultImblogGetCommentReq.updateTime = 0;
  return self;
}
- (BOOL) hasAttachData {
  return resultImblogGetCommentReq.hasAttachData;
}
- (NSData*) attachData {
  return resultImblogGetCommentReq.attachData;
}
- (IMBlogGetCommentReqBuilder*) setAttachData:(NSData*) value {
  resultImblogGetCommentReq.hasAttachData = YES;
  resultImblogGetCommentReq.attachData = value;
  return self;
}
- (IMBlogGetCommentReqBuilder*) clearAttachData {
  resultImblogGetCommentReq.hasAttachData = NO;
  resultImblogGetCommentReq.attachData = [NSData data];
  return self;
}
@end

@interface IMBlogGetCommentRsp ()
@property UInt32 userId;
@property UInt32 blogId;
@property UInt32 updateTime;
@property (strong) NSMutableArray<BlogInfo*> * commentListArray;
@property (strong) NSData* attachData;
@end

@implementation IMBlogGetCommentRsp

- (BOOL) hasUserId {
  return !!hasUserId_;
}
- (void) setHasUserId:(BOOL) _value_ {
  hasUserId_ = !!_value_;
}
@synthesize userId;
- (BOOL) hasBlogId {
  return !!hasBlogId_;
}
- (void) setHasBlogId:(BOOL) _value_ {
  hasBlogId_ = !!_value_;
}
@synthesize blogId;
- (BOOL) hasUpdateTime {
  return !!hasUpdateTime_;
}
- (void) setHasUpdateTime:(BOOL) _value_ {
  hasUpdateTime_ = !!_value_;
}
@synthesize updateTime;
@synthesize commentListArray;
@dynamic commentList;
- (BOOL) hasAttachData {
  return !!hasAttachData_;
}
- (void) setHasAttachData:(BOOL) _value_ {
  hasAttachData_ = !!_value_;
}
@synthesize attachData;
- (instancetype) init {
  if ((self = [super init])) {
    self.userId = 0;
    self.blogId = 0;
    self.updateTime = 0;
    self.attachData = [NSData data];
  }
  return self;
}
static IMBlogGetCommentRsp* defaultIMBlogGetCommentRspInstance = nil;
+ (void) initialize {
  if (self == [IMBlogGetCommentRsp class]) {
    defaultIMBlogGetCommentRspInstance = [[IMBlogGetCommentRsp alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultIMBlogGetCommentRspInstance;
}
- (instancetype) defaultInstance {
  return defaultIMBlogGetCommentRspInstance;
}
- (NSArray<BlogInfo*> *)commentList {
  return commentListArray;
}
- (BlogInfo*)commentListAtIndex:(NSUInteger)index {
  return [commentListArray objectAtIndex:index];
}
- (BOOL) isInitialized {
  if (!self.hasUserId) {
    return NO;
  }
  if (!self.hasBlogId) {
    return NO;
  }
  if (!self.hasUpdateTime) {
    return NO;
  }
  __block BOOL isInitcommentList = YES;
   [self.commentList enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    if (!element.isInitialized) {
      isInitcommentList = NO;
      *stop = YES;
    }
  }];
  if (!isInitcommentList) return isInitcommentList;
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasUserId) {
    [output writeUInt32:1 value:self.userId];
  }
  if (self.hasBlogId) {
    [output writeUInt32:2 value:self.blogId];
  }
  if (self.hasUpdateTime) {
    [output writeUInt32:3 value:self.updateTime];
  }
  [self.commentListArray enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    [output writeMessage:4 value:element];
  }];
  if (self.hasAttachData) {
    [output writeData:20 value:self.attachData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasUserId) {
    size_ += computeUInt32Size(1, self.userId);
  }
  if (self.hasBlogId) {
    size_ += computeUInt32Size(2, self.blogId);
  }
  if (self.hasUpdateTime) {
    size_ += computeUInt32Size(3, self.updateTime);
  }
  [self.commentListArray enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    size_ += computeMessageSize(4, element);
  }];
  if (self.hasAttachData) {
    size_ += computeDataSize(20, self.attachData);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (IMBlogGetCommentRsp*) parseFromData:(NSData*) data {
  return (IMBlogGetCommentRsp*)[[[IMBlogGetCommentRsp builder] mergeFromData:data] build];
}
+ (IMBlogGetCommentRsp*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetCommentRsp*)[[[IMBlogGetCommentRsp builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetCommentRsp*) parseFromInputStream:(NSInputStream*) input {
  return (IMBlogGetCommentRsp*)[[[IMBlogGetCommentRsp builder] mergeFromInputStream:input] build];
}
+ (IMBlogGetCommentRsp*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetCommentRsp*)[[[IMBlogGetCommentRsp builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetCommentRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (IMBlogGetCommentRsp*)[[[IMBlogGetCommentRsp builder] mergeFromCodedInputStream:input] build];
}
+ (IMBlogGetCommentRsp*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (IMBlogGetCommentRsp*)[[[IMBlogGetCommentRsp builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (IMBlogGetCommentRspBuilder*) builder {
  return [[IMBlogGetCommentRspBuilder alloc] init];
}
+ (IMBlogGetCommentRspBuilder*) builderWithPrototype:(IMBlogGetCommentRsp*) prototype {
  return [[IMBlogGetCommentRsp builder] mergeFrom:prototype];
}
- (IMBlogGetCommentRspBuilder*) builder {
  return [IMBlogGetCommentRsp builder];
}
- (IMBlogGetCommentRspBuilder*) toBuilder {
  return [IMBlogGetCommentRsp builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasUserId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"userId", [NSNumber numberWithInteger:self.userId]];
  }
  if (self.hasBlogId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"blogId", [NSNumber numberWithInteger:self.blogId]];
  }
  if (self.hasUpdateTime) {
    [output appendFormat:@"%@%@: %@\n", indent, @"updateTime", [NSNumber numberWithInteger:self.updateTime]];
  }
  [self.commentListArray enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    [output appendFormat:@"%@%@ {\n", indent, @"commentList"];
    [element writeDescriptionTo:output
                     withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }];
  if (self.hasAttachData) {
    [output appendFormat:@"%@%@: %@\n", indent, @"attachData", self.attachData];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasUserId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.userId] forKey: @"userId"];
  }
  if (self.hasBlogId) {
    [dictionary setObject: [NSNumber numberWithInteger:self.blogId] forKey: @"blogId"];
  }
  if (self.hasUpdateTime) {
    [dictionary setObject: [NSNumber numberWithInteger:self.updateTime] forKey: @"updateTime"];
  }
  for (BlogInfo* element in self.commentListArray) {
    NSMutableDictionary *elementDictionary = [NSMutableDictionary dictionary];
    [element storeInDictionary:elementDictionary];
    [dictionary setObject:[NSDictionary dictionaryWithDictionary:elementDictionary] forKey:@"commentList"];
  }
  if (self.hasAttachData) {
    [dictionary setObject: self.attachData forKey: @"attachData"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[IMBlogGetCommentRsp class]]) {
    return NO;
  }
  IMBlogGetCommentRsp *otherMessage = other;
  return
      self.hasUserId == otherMessage.hasUserId &&
      (!self.hasUserId || self.userId == otherMessage.userId) &&
      self.hasBlogId == otherMessage.hasBlogId &&
      (!self.hasBlogId || self.blogId == otherMessage.blogId) &&
      self.hasUpdateTime == otherMessage.hasUpdateTime &&
      (!self.hasUpdateTime || self.updateTime == otherMessage.updateTime) &&
      [self.commentListArray isEqualToArray:otherMessage.commentListArray] &&
      self.hasAttachData == otherMessage.hasAttachData &&
      (!self.hasAttachData || [self.attachData isEqual:otherMessage.attachData]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasUserId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.userId] hash];
  }
  if (self.hasBlogId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.blogId] hash];
  }
  if (self.hasUpdateTime) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.updateTime] hash];
  }
  [self.commentListArray enumerateObjectsUsingBlock:^(BlogInfo *element, NSUInteger idx, BOOL *stop) {
    hashCode = hashCode * 31 + [element hash];
  }];
  if (self.hasAttachData) {
    hashCode = hashCode * 31 + [self.attachData hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface IMBlogGetCommentRspBuilder()
@property (strong) IMBlogGetCommentRsp* resultImblogGetCommentRsp;
@end

@implementation IMBlogGetCommentRspBuilder
@synthesize resultImblogGetCommentRsp;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultImblogGetCommentRsp = [[IMBlogGetCommentRsp alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultImblogGetCommentRsp;
}
- (IMBlogGetCommentRspBuilder*) clear {
  self.resultImblogGetCommentRsp = [[IMBlogGetCommentRsp alloc] init];
  return self;
}
- (IMBlogGetCommentRspBuilder*) clone {
  return [IMBlogGetCommentRsp builderWithPrototype:resultImblogGetCommentRsp];
}
- (IMBlogGetCommentRsp*) defaultInstance {
  return [IMBlogGetCommentRsp defaultInstance];
}
- (IMBlogGetCommentRsp*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (IMBlogGetCommentRsp*) buildPartial {
  IMBlogGetCommentRsp* returnMe = resultImblogGetCommentRsp;
  self.resultImblogGetCommentRsp = nil;
  return returnMe;
}
- (IMBlogGetCommentRspBuilder*) mergeFrom:(IMBlogGetCommentRsp*) other {
  if (other == [IMBlogGetCommentRsp defaultInstance]) {
    return self;
  }
  if (other.hasUserId) {
    [self setUserId:other.userId];
  }
  if (other.hasBlogId) {
    [self setBlogId:other.blogId];
  }
  if (other.hasUpdateTime) {
    [self setUpdateTime:other.updateTime];
  }
  if (other.commentListArray.count > 0) {
    if (resultImblogGetCommentRsp.commentListArray == nil) {
      resultImblogGetCommentRsp.commentListArray = [[NSMutableArray alloc] initWithArray:other.commentListArray];
    } else {
      [resultImblogGetCommentRsp.commentListArray addObjectsFromArray:other.commentListArray];
    }
  }
  if (other.hasAttachData) {
    [self setAttachData:other.attachData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (IMBlogGetCommentRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (IMBlogGetCommentRspBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setUserId:[input readUInt32]];
        break;
      }
      case 16: {
        [self setBlogId:[input readUInt32]];
        break;
      }
      case 24: {
        [self setUpdateTime:[input readUInt32]];
        break;
      }
      case 34: {
        BlogInfoBuilder* subBuilder = [BlogInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addCommentList:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        [self setAttachData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasUserId {
  return resultImblogGetCommentRsp.hasUserId;
}
- (UInt32) userId {
  return resultImblogGetCommentRsp.userId;
}
- (IMBlogGetCommentRspBuilder*) setUserId:(UInt32) value {
  resultImblogGetCommentRsp.hasUserId = YES;
  resultImblogGetCommentRsp.userId = value;
  return self;
}
- (IMBlogGetCommentRspBuilder*) clearUserId {
  resultImblogGetCommentRsp.hasUserId = NO;
  resultImblogGetCommentRsp.userId = 0;
  return self;
}
- (BOOL) hasBlogId {
  return resultImblogGetCommentRsp.hasBlogId;
}
- (UInt32) blogId {
  return resultImblogGetCommentRsp.blogId;
}
- (IMBlogGetCommentRspBuilder*) setBlogId:(UInt32) value {
  resultImblogGetCommentRsp.hasBlogId = YES;
  resultImblogGetCommentRsp.blogId = value;
  return self;
}
- (IMBlogGetCommentRspBuilder*) clearBlogId {
  resultImblogGetCommentRsp.hasBlogId = NO;
  resultImblogGetCommentRsp.blogId = 0;
  return self;
}
- (BOOL) hasUpdateTime {
  return resultImblogGetCommentRsp.hasUpdateTime;
}
- (UInt32) updateTime {
  return resultImblogGetCommentRsp.updateTime;
}
- (IMBlogGetCommentRspBuilder*) setUpdateTime:(UInt32) value {
  resultImblogGetCommentRsp.hasUpdateTime = YES;
  resultImblogGetCommentRsp.updateTime = value;
  return self;
}
- (IMBlogGetCommentRspBuilder*) clearUpdateTime {
  resultImblogGetCommentRsp.hasUpdateTime = NO;
  resultImblogGetCommentRsp.updateTime = 0;
  return self;
}
- (NSMutableArray<BlogInfo*> *)commentList {
  return resultImblogGetCommentRsp.commentListArray;
}
- (BlogInfo*)commentListAtIndex:(NSUInteger)index {
  return [resultImblogGetCommentRsp commentListAtIndex:index];
}
- (IMBlogGetCommentRspBuilder *)addCommentList:(BlogInfo*)value {
  if (resultImblogGetCommentRsp.commentListArray == nil) {
    resultImblogGetCommentRsp.commentListArray = [[NSMutableArray alloc]init];
  }
  [resultImblogGetCommentRsp.commentListArray addObject:value];
  return self;
}
- (IMBlogGetCommentRspBuilder *)setCommentListArray:(NSArray<BlogInfo*> *)array {
  resultImblogGetCommentRsp.commentListArray = [[NSMutableArray alloc]initWithArray:array];
  return self;
}
- (IMBlogGetCommentRspBuilder *)clearCommentList {
  resultImblogGetCommentRsp.commentListArray = nil;
  return self;
}
- (BOOL) hasAttachData {
  return resultImblogGetCommentRsp.hasAttachData;
}
- (NSData*) attachData {
  return resultImblogGetCommentRsp.attachData;
}
- (IMBlogGetCommentRspBuilder*) setAttachData:(NSData*) value {
  resultImblogGetCommentRsp.hasAttachData = YES;
  resultImblogGetCommentRsp.attachData = value;
  return self;
}
- (IMBlogGetCommentRspBuilder*) clearAttachData {
  resultImblogGetCommentRsp.hasAttachData = NO;
  resultImblogGetCommentRsp.attachData = [NSData data];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
